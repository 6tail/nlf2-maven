nlf.log.default.debug=[DEBUG] {0} {1} \r\n{2}\r\n{3}\r\n
nlf.log.default.info=[INFO] {0} {1} \r\n{2}\r\n{3}\r\n
nlf.log.default.warn=[WARN] {0} {1} \r\n{2}\r\n{3}\r\n
nlf.log.default.error=[ERROR] {0} {1} \r\n{2}\r\n{3}\r\n
nlf.log.default.trace=[TRACE] {0} {1} \r\n{2}\r\n{3}\r\n

nlf.exception=nlf exception
nlf.exception.dao=nlf dao exception
nlf.exception.dao.setting.not_found=db setting not found:{0}
nlf.exception.dao.setting.default_not_found=default db setting not found
nlf.exception.dao.setting.format=db setting file format:{0}
nlf.exception.dao.driver.not_found=db driver not found:{0}
nlf.exception.dao.connection.provider.not_found=db connection provider not found to support:{0}
nlf.exception.dao.not_found=dao not found:{0}
nlf.exception.dao.executer.not_found=executer not found:dbType={0},executer={1}
nlf.exception.dao.select.one.not_found=record not found
nlf.exception.dao.operation_not_support=operation not support
nlf.exception.dao.batch_not_support=batch not support:{0}
nlf.exception.dao.batch_not_start=need start batch
nlf.exception.validate=parameter not valid
nlf.exception.validate.number={0} must in 0-9 numbers
nlf.exception.validate.integer={0} must be an integer
nlf.exception.validate.decimal={0} must be a decimal
nlf.exception.validate.letter={0} must be a letter
nlf.exception.validate.letter_upper={0} must be an uppercase letter
nlf.exception.validate.letter_lower={0} must be a lowercase letter
nlf.exception.validate.email={0} is not valid email
nlf.exception.validate.mobile={0} is not valid mobile
nlf.exception.validate.id_card={0} is not valid id card
nlf.exception.validate.integer_positive={0} must be a positive integer
nlf.exception.validate.integer_negtive={0} must be a negtive integer
nlf.exception.validate.decimal_positive={0} must be a positive decimal
nlf.exception.validate.decimal_negtive={0} must be a negtive decimal
nlf.exception.validate.empty={0} must be empty
nlf.exception.validate.not_empty={0} must have a value
nlf.exception.validate.is={0} must be {1}
nlf.exception.validate.not={0} must not be {1}
nlf.exception.validate.contains={0} must contains {1}
nlf.exception.validate.not_contains={0} must not contains {1}
nlf.exception.validate.min_length={0} length must more than {1}
nlf.exception.validate.max_length={0} length must less than {1}
nlf.exception.validate.fix_length={0} length must equals {1}
nlf.exception.validate.in={0} must in {1}
nlf.exception.validate.regex={0} not valid
nlf.exception.validate.or=\ or 

nlf.dao.setting.provider.found=found db setting file:{1},supported by setting provider:{0}
nlf.dao.setting.provider.not_found=found db setting file:{0},but no supported setting provider:{1}
nlf.dao.setting.found=find {0} supported db setting:{1}
nlf.dao.driver.registed=driver registed:{0}
nlf.dao.executer.sql.statement=SQL = {0}
nlf.dao.executer.sql.parameter=\r\nparam[{0}] = {1}

nlf.serialize.parser.not_found=parser not found:{0}
nlf.serialize.wrapper.not_found=wrapper not found:{0}
nlf.serialize.json.format=json format:{0}
nlf.serialize.xml.format=xml format:{0}

nlf.dispatcher.request_failed=request failed:{0}

nlf.web.paging.label.record_count_prefix=
nlf.web.paging.label.record_count_suffix=records
nlf.web.paging.label.page_size_prefix=Display 
nlf.web.paging.label.page_size_suffix=\ records per page
nlf.web.paging.label.page_number_prefix=Showing page
nlf.web.paging.label.page_number_suffix=
nlf.web.paging.label.prev=Prev
nlf.web.paging.label.next=Next